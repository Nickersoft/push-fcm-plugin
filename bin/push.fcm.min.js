/**
 * Push FCM Plugin
 * ===============
 * The official Firebase Cloud Messaging plugin for Push.js
 *
 * License
 * -------
 *
 * The MIT License (MIT)
 *
 * Copyright (c) 2015-2017 Tyler Nickerson
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of self software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and self permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @preserve
 */
var ERR_NO_LOCAL_STORAGE="localStorage not available. Cannot record whether or not tokens are sent to the server.";var ERR_NO_FIREBASE='Firebase could not be found. Did you run "npm install firebase --save"?';var ERR_NO_PUSH="Push.js v1.0 is required to run this plugin in the browser. Please install it and include it in this page.";var ERR_SW_FAILED="Could not register the ServiceWorker due to the following error: ";var ERR_SW_NOT_SUPPORTED="Your current environment does not support ServiceWorkers. FCM may not work as expected.";var SENT_TO_SERVER_KEY="PushFCM_sentToServer";var INITIALIZED_KEY="PushFCM_initialized";function getRoot(){return typeof self==="object"&&self.self===self&&self||typeof global==="object"&&global.global===global&&global}(function(e){"use strict";var n=getRoot();if(typeof define==="function"&&define.amd){define(["firebase"],function(o){return e(n,o)})}else if(typeof module!=="undefined"&&module.exports){var o=require("firebase/app");require("firebase/messaging");module.exports=e(n,o)()}else{if(typeof n.Push==="undefined"||n.Push===null){console.error(ERR_NO_PUSH)}else{n.Push.extend(e(n,n.firebase))}}})(function(e,n,o){var r={FCM:{apiKey:null,authDomain:null,databaseURL:null,projectId:null,storageBucket:null,messagingSenderId:null,serviceWorkerLocation:"./",onTokenFetched:function(e){},onTokenFetchedError:function(e){},onPermissionRequired:function(e){},onPermissionGranted:function(e){},onPermissionDenied:function(e){},onMessage:function(e){},sendTokenToServer:function(e){},onTokenDeleted:function(){},onTokenDeletedError:function(){}}};var i=function(o){var r=this;var i=false;if(typeof n==="undefined"||n===null){console.error(ERR_NO_FIREBASE)}r._messaging=null;function t(){return n.apps.length>0}function s(n){if(e.hasOwnProperty("localStorage"))e.localStorage.setItem(SENT_TO_SERVER_KEY,n?1:0);else console.error(ERR_NO_LOCAL_STORAGE)}function a(){if(e.hasOwnProperty("localStorage"))return e.localStorage.getItem(SENT_TO_SERVER_KEY)==1;else console.error(ERR_NO_LOCAL_STORAGE);return false}function u(e){if(!a()){o.FCM.sendTokenToServer(e);s(true)}}function l(){g().then(function(e){s(false);if(e){u(e);o.FCM.onTokenFetched(e)}else{o.FCM.onPermissionRequired();c()}}).catch(function(e){s(false);o.FCM.onTokenFetchedError(e)})}function c(){r._messaging.requestPermission().then(function(){o.FCM.onPermissionGranted();l()}).catch(function(e){o.FCM.onPermissionDenied(e)})}function f(){return new Promise(function(e,n){g().then(function(i){r._messaging.deleteToken(i).then(function(){s(false);o.FCM.onTokenDeleted();e(i)}).catch(function(e){o.FCM.onTokenDeletedError(e);n(e)})}).catch(function(e){o.FCM.onTokenFetchedError(e);n(e)})})}function g(){return new Promise(function(e,n){r._messaging.getToken().then(function(n){e(n)}).catch(function(e){n(e)})})}function d(i){return new Promise(function(s,a){var u,c,f,g;u=o.FCM;c={apiKey:u.apiKey,authDomain:u.authDomain,databaseURL:u.databaseURL,projectId:u.projectId,storageBucket:u.storageBucket,messagingSenderId:u.messagingSenderId};f=t();if(!f){n.initializeApp(c)}else{console.info("Firebase could not be initialized. It may be because Firebase an app is already initialized.")}r._messaging=n.messaging();g=u.serviceWorkerLocation;if(g[g.length-1]!=="/"){g+="/"}if(!f){if(e.navigator!=="undefined"&&"serviceWorker"in e.navigator){e.navigator.serviceWorker.register(g+"firebase-messaging-sw.min.js",{scope:g}).then(function(){return navigator.serviceWorker.ready}).then(function(e){if(r._messaging!=null&&r._messaging!=="undefined"){var n=new MessageChannel;n.port1.onmessage=function(){r._messaging.useServiceWorker(e);r._messaging.onTokenRefresh(l);r._messaging.onMessage(o.FCM.onMessage);l();console.debug("Received heartbeat from ServiceWorker.");console.debug("Messaging instance initialized with value:");console.debug(r._messaging);s(i)};e.active.postMessage(c,[n.port2])}}).catch(function(e){a(e)})}else{a(new Error(ERR_SW_NOT_SUPPORTED));return{}}}})}r.FCM=function(){var e=false;for(var n in o.FCM){if(o.FCM[n]==null){console.error("Null values exists for config value: "+n+". Please make sure all values "+"are set properly in Push.config().FCM before continuing.");e=true}}if(!e){return d({getToken:g,deleteToken:f,isTokenSentToServer:a})}return null}};return{config:r,plugin:i}});